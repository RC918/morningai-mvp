name: Env Check

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
permissions:
  pull-requests: write
jobs:
  env-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - { name: web, path: apps/web }
          - { name: api, path: apps/api }
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dotenv for check_env.mjs
        run: npm install dotenv

      - name: Create .env from GitHub Secrets
        run: |
          cat > ${{ matrix.app.path }}/.env << 'EOF'
          SUPABASE_URL=${{ secrets.SB_URL }}
          SUPABASE_ANON_KEY=${{ secrets.SB_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SB_SERVICE_ROLE_KEY }}
          SUPABASE_JWT_SECRET=${{ secrets.SB_JWT_SECRET }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          REDIS_URL=${{ secrets.REDIS_URL }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          EMAIL_FROM=${{ secrets.EMAIL_FROM }}
          SMTP_HOST=${{ secrets.SMTP_HOST }}
          SMTP_PORT=${{ secrets.SMTP_PORT }}
          SMTP_USER=${{ secrets.SMTP_USER }}
          SMTP_PASS=${{ secrets.SMTP_PASS }}
          EOF

      - name: Install Node.js dependencies (web)
        if: ${{ matrix.app.name == 'web' }}
        working-directory: ${{ matrix.app.path }}
        run: npm ci

      - name: Run Env Check for web
        id: env-check-web
        if: ${{ matrix.app.name == 'web' }}
        working-directory: ${{ matrix.app.path }}
        run: node ../../ops/env/scripts/check_env.mjs --env-file .env --app web | tee env_check_output.txt

      - name: Extract Env Check Output for web
        id: extract-env-web
        if: ${{ matrix.app.name == 'web' }}
        run: |
          ENV_MISSING=$(grep 'Missing environment variables:' env_check_output.txt | sed 's/Missing environment variables: //')
          echo "env_missing=$ENV_MISSING" >> $GITHUB_OUTPUT

      - name: Web Lint Check
        id: web-lint-check
        if: ${{ matrix.app.name == 'web' }}
        working-directory: ${{ matrix.app.path }}
        run: npm run lint

      - name: Web Type Check
        id: web-type-check
        if: ${{ matrix.app.name == 'web' }}
        working-directory: ${{ matrix.app.path }}
        run: npm run typecheck

      - name: Web Unit Tests
        id: web-unit-tests
        if: ${{ matrix.app.name == 'web' }}
        working-directory: ${{ matrix.app.path }}
        run: npm run test

      - name: Web Import Smoke Test
        id: web-import-smoke-test
        if: ${{ matrix.app.name == 'web' }}
        working-directory: ${{ matrix.app.path }}
        run: npm run build

      - name: Install Python dependencies (api)
        if: ${{ matrix.app.name == 'api' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps (api)
        if: ${{ matrix.app.name == 'api' }}
        working-directory: ${{ matrix.app.path }}
        run: pip install -r requirements.txt

      - name: Run Env Check for api
        id: env-check-api
        if: ${{ matrix.app.name == 'api' }}
        working-directory: ${{ matrix.app.path }}
        run: node ../../ops/env/scripts/check_env.mjs --env-file .env --app api | tee env_check_output.txt

      - name: Extract Env Check Output for api
        id: extract-env-api
        if: ${{ matrix.app.name == 'api' }}
        run: |
          ENV_MISSING=$(grep 'Missing environment variables:' env_check_output.txt | sed 's/Missing environment variables: //')
          echo "env_missing=$ENV_MISSING" >> $GITHUB_OUTPUT

      - name: API Lint Check
        id: api-lint-check
        if: ${{ matrix.app.name == 'api' }}
        working-directory: ${{ matrix.app.path }}
        run: pip install flake8 && flake8 src/

      - name: API Type Check
        id: api-type-check
        if: ${{ matrix.app.name == 'api' }}
        working-directory: ${{ matrix.app.path }}
        run: pip install mypy && mypy src/

      - name: API Unit Tests
        id: api-unit-tests
        if: ${{ matrix.app.name == 'api' }}
        working-directory: ${{ matrix.app.path }}
        run: pip install pytest && pytest test_health.py

      - name: API Import Smoke Test
        id: api-import-smoke-test
        if: ${{ matrix.app.name == 'api' }}
        working-directory: ${{ matrix.app.path }}
        run: python -c "import src.main"

      - name: API Health Check (Local)
        id: api-health-check-local
        if: ${{ matrix.app.name == 'api' }}
        working-directory: ${{ matrix.app.path }}
        run: |
          nohup python src/main.py > api_dev.log 2>&1 &
          sleep 10
          curl --fail http://localhost:5000/health

      - name: API Health Check (Online) - Placeholder
        id: api-health-check-online
        if: ${{ matrix.app.name == 'api' }}
        run: |
          echo "Online health check will be implemented after Render deployment is stable."
          echo "health_online_outcome=N/A" >> $GITHUB_OUTPUT

      - name: Generate Evidence JSON
        id: generate-evidence-json
        run: |
          PR_NUMBER="${{ github.event.pull_request.number || '' }}"
          REPO_NAME="${{ github.repository }}"
          COMMIT_SHA="${{ github.sha }}"
          WEB_LINT_OUTCOME="${{ steps.web-lint-check.outcome || 'N/A' }}"
          WEB_TYPE_OUTCOME="${{ steps.web-type-check.outcome || 'N/A' }}"
          WEB_UNIT_TESTS_OUTCOME="${{ steps.web-unit-tests.outcome || 'N/A' }}"
          WEB_IMPORT_SMOKE_TEST_OUTCOME="${{ steps.web-import-smoke-test.outcome || 'N/A' }}"
          API_LINT_OUTCOME="${{ steps.api-lint-check.outcome || 'N/A' }}"
          API_TYPE_OUTCOME="${{ steps.api-type-check.outcome || 'N/A' }}"
          API_UNIT_TESTS_OUTCOME="${{ steps.api-unit-tests.outcome || 'N/A' }}"
          API_IMPORT_SMOKE_TEST_OUTCOME="${{ steps.api-import-smoke-test.outcome || 'N/A' }}"
          ENV_MISSING="${{ steps.extract-env-web.outputs.env_missing || steps.extract-env-api.outputs.env_missing || '無' }}"
          API_HEALTH_CHECK_LOCAL_OUTCOME="${{ steps.api-health-check-local.outcome || 'N/A' }}"
          API_HEALTH_CHECK_ONLINE_OUTCOME="${{ steps.api-health-check-online.outputs.health_online_outcome || 'N/A' }}"
          CREATED_AT="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

          EVIDENCE_JSON='{
            "pr_number": "'$PR_NUMBER'",
            "repo": "'$REPO_NAME'",
            "commit_sha": "'$COMMIT_SHA'",
            "tests": {
              "web_lint": "'$WEB_LINT_OUTCOME'",
              "web_type": "'$WEB_TYPE_OUTCOME'",
              "web_unit_tests": "'$WEB_UNIT_TESTS_OUTCOME'",
              "web_import_smoke_test": "'$WEB_IMPORT_SMOKE_TEST_OUTCOME'",
              "api_lint": "'$API_LINT_OUTCOME'",
              "api_type": "'$API_TYPE_OUTCOME'",
              "api_unit_tests": "'$API_UNIT_TESTS_OUTCOME'",
              "api_import_smoke_test": "'$API_IMPORT_SMOKE_TEST_OUTCOME'"
            },
            "coverage": "N/A",
            "env_missing": "'$ENV_MISSING'",
            "health_local": "'$API_HEALTH_CHECK_LOCAL_OUTCOME'",
            "health_online": "'$API_HEALTH_CHECK_ONLINE_OUTCOME'",
            "ai_summary": "N/A",
            "created_at": "'$CREATED_AT'"
          }'
          echo "$EVIDENCE_JSON" > evidence.json

      - name: Upload Evidence Artifact
        uses: actions/upload-artifact@v4
        with:
          name: evidence-json-${{ matrix.app.name }}
          path: evidence.json

      - name: Post Evidence comment
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request?.number;
            
            if (!prNumber) {
              console.log('No PR number found, skipping comment');
              return;
            }
            
            const jobUrl = `https://github.com/${owner}/${repo}/actions/runs/${context.runId}`;
            const jobStatus = '${{ job.status }}';
            
            const commentBody = `
<!-- evidence-package -->
## 🔍 CI/CD 工作流程報告

**狀態**: ${jobStatus === 'success' ? '✅ 通過' : '❌ 失敗'}
**工作流程**: [Env Check](${jobUrl})
**時間**: ${new Date().toLocaleString()}
**應用程式**: ${{ matrix.app.name }}

### 測試結果:
- **環境檢查**: ${{ steps.env-check-web.outcome || steps.env-check-api.outcome || 'N/A' }}
- **Web Lint 檢查**: ${{ steps.web-lint-check.outcome || 'N/A' }}
- **Web Type 檢查**: ${{ steps.web-type-check.outcome || 'N/A' }}
- **Web 單元測試**: ${{ steps.web-unit-tests.outcome || 'N/A' }}
- **Web Import Smoke Test**: ${{ steps.web-import-smoke-test.outcome || 'N/A' }}
- **API Lint 檢查**: ${{ steps.api-lint-check.outcome || 'N/A' }}
- **API Type 檢查**: ${{ steps.api-type-check.outcome || 'N/A' }}
- **API 單元測試**: ${{ steps.api-unit-tests.outcome || 'N/A' }}
- **API Import Smoke Test**: ${{ steps.api-import-smoke-test.outcome || 'N/A' }}
- **覆蓋率**: N/A (待實作)
- **健康檢查 (本地)**: ${{ steps.api-health-check-local.outcome || 'N/A' }}
- **健康檢查 (線上)**: ${{ steps.api-health-check-online.outputs.health_online_outcome || 'N/A' }}

### 環境變數缺漏清單:
${{ steps.extract-env-web.outputs.env_missing || steps.extract-env-api.outputs.env_missing || '無' }}

### AI 變更摘要:
N/A (待實作)

### 摘要:
此次 CI/CD 執行已完成所有必要的檢查和測試。
            `;

            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber,
            });

            const existingComment = comments.data.find(comment => comment.body.includes('<!-- evidence-package -->'));

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existingComment.id,
                body: commentBody
              });
              console.log('Existing comment updated successfully');
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log('New comment posted successfully');
            }





